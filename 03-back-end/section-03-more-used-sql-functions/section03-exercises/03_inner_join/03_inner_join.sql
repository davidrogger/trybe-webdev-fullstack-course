-- ExercÃ­cio 1: Utilizando o INNER JOIN, encontre as vendas nacionais (domestic_sales) e internacionais (international_sales) de cada filme.

SELECT title, domestic_sales, international_sales
FROM movies m
INNER JOIN box_office b ON m.id = b.movie_id;

-- ðŸš€ ExercÃ­cio 2: Utilizando o INNER JOIN, faÃ§a uma busca que retorne o total  de vendas para cada filme que possui um nÃºmero maior de vendas internacionais (international_sales) do que vendas nacionais (domestic_sales).

SELECT title, (b.domestic_sales + b.international_sales) AS "Vendas"
FROM movies m
INNER JOIN box_office b ON m.id = b.movie_id
WHERE b.international_sales > domestic_sales;

-- ðŸš€ ExercÃ­cio 3: Utilizando o INNER JOIN, faÃ§a uma busca que retorne os filmes e sua avaliaÃ§Ã£o (rating) em ordem decrescente.

SELECT m.*, b.rating
FROM movies m
INNER JOIN box_office b ON m.id = b.movie_id
ORDER BY b.rating DESC;

-- ExercÃ­cio 4: Utilizando o LEFT JOIN, faÃ§a uma busca que retorne todos os dados dos cinemas, mesmo os que nÃ£o possuem filmes em cartaz e, adicionalmente, os dados dos filmes que estÃ£o em cartaz nestes cinemas. Retorne os nomes dos cinemas em ordem alfabÃ©tica.

SELECT t.*, m.*
FROM theater t
LEFT JOIN movies m ON t.id = theater_id;

-- ExercÃ­cio 5: Utilizando o RIGHT JOIN, faÃ§a uma busca que retorne todos os dados dos filmes, mesmo os que nÃ£o estÃ£o em cartaz e, adicionalmente, os dados dos cinemas que possuem estes filmes em cartaz. Retorne os nomes dos cinemas em ordem alfabÃ©tica.

SELECT t.*, m.*
FROM theater t
RIGHT JOIN movies m ON m.theater_id = t.id

-- ðŸš€ ExercÃ­cio 6: Utilizando o INNER JOIN, selecione todas as informaÃ§Ãµes dos filmes que estÃ£o em cartaz (possuem theater_id diferente de NULL) com avaliaÃ§Ã£o maior que 8.

SELECT m.*
FROM movies m
INNER JOIN box_office b ON m.id = b.movie_id
WHERE m.theater_id IS NOT NULL AND b.rating > 8;
